@model X.PagedList.IPagedList<AccountManagementSystem.Models.Person>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Persons";
}

<h1>Persons</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <div class="col-md-3">
            <input type="text" name="idNumber" value="@ViewData["CurrentIdNumber"]" placeholder="Search by ID Number" class="form-control" />
        </div>
        <div class="col-md-3">
            <input type="text" name="surname" value="@ViewData["CurrentSurname"]" placeholder="Search by Surname" class="form-control" />
        </div>
        <div class="col-md-3">
            <input type="text" name="accountNumber" value="@ViewData["CurrentAccountNumber"]" placeholder="Search by Account Number" class="form-control" />
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary">Search</button>
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>
</form>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Person</a> |
    <a asp-action="ExportCsv" class="btn btn-outline-secondary">Export to CSV</a>
</p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Surname</th>
            <th>ID Number</th>
            <th>Accounts</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.code</td>
                <td>@item.name</td>
                <td>@item.surname</td>
                <td>@item.id_number</td>
                <td>
                    @if (item.Accounts != null && item.Accounts.Any())
                    {
                        <span class="badge bg-primary">@item.Accounts.Count Accounts</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">No Accounts</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.code" class="btn btn-info btn-sm">View Accounts</a>
                    <a asp-action="Edit" asp-route-id="@item.code" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.code" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination controls -->
<div class="d-flex justify-content-between align-items-center">
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { 
            page, 
            idNumber = ViewData["CurrentIdNumber"],
            surname = ViewData["CurrentSurname"],
            accountNumber = ViewData["CurrentAccountNumber"],
            sortOrder = ViewData["CurrentSort"]
        }), new PagedListRenderOptions { 
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info mt-3">
        No persons found matching your search criteria.
    </div>
}